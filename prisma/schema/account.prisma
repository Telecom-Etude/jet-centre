/// Model representing any person in the database.
/// <br/>
/// This can represent users, that can access the ERP, and external people that
/// will never have access to the ERP.
model Person {
    id        String    @id @default(cuid())
    email     String    @unique
    firstName String
    lastName  String
    /// Telephone number
    number    String?
    address   Address?  @relation(fields: [addressId], references: [id])
    addressId String?
    user      User?
    assignee  Assignee?
    clients   Client?
}

/// A user is a person that can access the ERP tool by signing in.
/// <br />
/// For the moment, the only people that can be users are admins. In the future,
/// assignees too will have an account and will be able to log in (to see the
/// different studies they applied to, save their CV on the platform, etc.)
model User {
    id             String        @id @default(cuid())
    person         Person        @relation(fields: [personId], references: [id])
    personId       String        @unique
    settings       UserSettings? @relation(fields: [userSettingsId], references: [id])
    admin          Admin?
    userSettingsId String?
}

/// An admin represents an administrator of Telecom Etude, i.e. a person that is in mandate.
model Admin {
    id             String  @id @default(cuid())
    user           User    @relation(fields: [userId], references: [id])
    userId         String  @unique
    /// Title of the position within the JE (e.g. pr√©sident, respo info, etc.)
    position       String?
    image          String?
    studies        Study[] @relation("cdp")
    auditedStudies Study[] @relation("auditor")
}

/// Settings are used to customise the ERP (colours, notifications, keybindings, behaviours, etc.)
model UserSettings {
    id                String            @id @default(cuid())
    theme             String
    notificationLevel NotificationLevel
    gui               Boolean
    User              User[]
}

/// Aggressiveness of the notifications (push-notifications, no notifications, etc.)
enum NotificationLevel {
    Low
    Medium
    High
}

/// Stores the address of a person/company
model Address {
    id      String   @id @default(cuid())
    number  String
    street  String
    city    String
    zipCode String
    country String
    people  Person[]
    company Company?
}
