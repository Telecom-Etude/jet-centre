enum Level {
    Low
    Medium
    High
}

model MRIs {
    id                 String     @id @default(cuid())
    wageLowerBound     Int?
    wageUpperBound     Int?
    wageLevel          Level?
    difficulty         Level?
    mainDomain         Domain?
    introductionText   String?
    descriptionText    String?
    timeLapsText       String?
    requiredSkillsText String?
    study              Studies    @relation(fields: [studyId], references: [id], onDelete: Cascade)
    studyId            String     @unique
    formMRIs           FormMRIs[]
}

model Assignees {
    id             String           @id @default(cuid())
    nbApplications Int
    docs           AssigneeDocs[]
    information    AssigneeInfos?
    person         People           @relation(fields: [peopleId], references: [id], onDelete: Cascade)
    peopleId       String           @unique
    studyAssign    StudyAssignees[]
}

model AssigneeInfos {
    id            String    @id @default(cuid())
    assignee      Assignees @relation(fields: [assigneeId], references: [id], onDelete: Cascade)
    assigneeId    String    @unique
    age           Int
    promotion     Int
    asScholarship Boolean
    oldJet        Boolean
}

model AssigneeDocs {
    id               String    @id @default(cuid())
    assignee         Assignees @relation(fields: [assigneeId], references: [id], onDelete: Cascade)
    assigneeId       String
    cni              Docs      @relation("cni", fields: [cniId], references: [id])
    cniId            String    @unique
    socialSecurity   Docs      @relation("socialSecurity", fields: [socialSecurityId], references: [id])
    socialSecurityId String    @unique
    studentCard      Docs      @relation("studentCard", fields: [studentCardId], references: [id])
    studentCardId    String    @unique
}

model StudyAssignees {
    id              String         @id @default(cuid())
    study           Studies        @relation(fields: [studyId], references: [id], onDelete: Cascade)
    studyId         String
    assignee        Assignees      @relation(fields: [assigneeId], references: [id], onDelete: Cascade)
    assigneeId      String
    formInterview   FormInterviews @relation(fields: [formInterviewId], references: [id], onDelete: Cascade)
    formInterviewId String         @unique
    formMRI         FormMRIs       @relation(fields: [formMRIId], references: [id], onDelete: Cascade)
    formMRIId       String         @unique
    selection       String
    taken           Boolean
}

model FormMRIs {
    id             String          @id @default(cuid())
    mri            MRIs            @relation(fields: [mriId], references: [id], onDelete: Cascade)
    mriId          String          @unique
    studyAssignees StudyAssignees?
    experience     String
    knowledge      String
    ideas          String
    jeExperience   Int
}

model FormInterviews {
    id              String          @id @default(cuid())
    studyAssignees  StudyAssignees?
    available       Boolean
    approach        String
    courses         String
    STAR_S          String
    STAR_T          String
    STAR_A          String
    STAR_R          String
    motivation      String
    cdpRequirements String
    questions       String
}
