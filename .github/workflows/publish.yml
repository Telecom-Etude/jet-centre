name: pipeline

on:
    push:
        branches:
            - preprod
            - prod
        tags:
            - 'v*.*.*'

jobs:
    deploy:
        name: build && push image to docker hub
        runs-on: ubuntu-latest
        if: github.repository == 'Telecom-Etude/jet-centre'

        steps:
            - name: Checkout source
              uses: actions/checkout@v3

            - name: Setup Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Docker login
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Set Docker tags
              id: vars
              run: |
                  if [[ "${GITHUB_REF_TYPE}" == "branch" ]]; then
                    if [[ "${GITHUB_REF_NAME}" == "prod" ]]; then
                      echo "TAGS=smeag0l/jet-centre:prod,smeag0l/jet-centre:sha-${GITHUB_SHA::7}" >> $GITHUB_ENV
                    elif [[ "${GITHUB_REF_NAME}" == "preprod" ]]; then
                      echo "TAGS=smeag0l/jet-centre:preprod,smeag0l/jet-centre:sha-${GITHUB_SHA::7}" >> $GITHUB_ENV
                    fi
                  elif [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
                    VERSION="${GITHUB_REF_NAME}"
                    echo "TAGS=smeag0l/jet-centre:${VERSION},smeag0l/jet-centre:latest" >> $GITHUB_ENV
                  fi

            - name: Build and push image
              id: build
              uses: docker/build-push-action@v3
              with:
                  context: .
                  file: Dockerfile
                  target: runner
                  push: true
                  tags: ${{ env.TAGS }}

            - name: Export digest
              run: |
                  echo "DIGEST=${{ steps.build.outputs.digest }}" >> $GITHUB_ENV
                  echo "Image digest: ${{ steps.build.outputs.digest }}"

            - name: Write digest to file
              run: echo "${{ steps.build.outputs.digest }}" > digest.txt

            - name: Save digest artifact
              uses: actions/upload-artifact@v3
              with:
                  name: image-digest
                  path: digest.txt
